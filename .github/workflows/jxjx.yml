name: Sign and Distribute Shortcuts

on:
  workflow_dispatch: # Allows manual triggering

jobs:
  sign-shortcuts:
    runs-on: macos-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Debug directory structure
      - name: List Directory Structure
        run: |
          echo "Current working directory: $(pwd)"
          echo "Listing all files in repository:"
          find . -type f -ls
          echo "Checking for Priv folder:"
          find . -type d -name "Priv" || echo "Priv folder not found"
          echo "Listing .shortcut files:"
          find . -type f -name "*.shortcut" || echo "No .shortcut files found"

      # Step 3: Verify certificate file
      - name: Verify Certificate File
        run: |
          P12_FILE=$(find . -type f -name "*.p12" -path "*/Priv/*" | head -n 1)
          if [ -z "$P12_FILE" ]; then
            echo "Error: Could not find .p12 file in Priv folder"
            find . -type f -name "*.p12"
            exit 1
          fi
          echo "Found .p12: $P12_FILE"
          echo "Checksum of .p12 file:"
          shasum -a 256 "$P12_FILE"
          echo "Inspecting .p12 file with openssl:"
          openssl pkcs12 -info -in "$P12_FILE" -nokeys -passin pass: 2>&1 || {
            echo "Warning: openssl inspection failed. The .p12 file may be corrupted or password-protected."
          }
        env:
          P12_FILE: ${{ steps.find-files.outputs.p12_file }}

      # Step 4: Import signing certificate
      - name: Import Signing Certificate
        run: |
          P12_FILE=$(find . -type f -name "*.p12" -path "*/Priv/*" | head -n 1)
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          echo "Importing $P12_FILE (no password)"
          security import "$P12_FILE" -k build.keychain -P "" -A -T /usr/bin/codesign || {
            echo "Error: Failed to import certificate. The .p12 file may be corrupted or require a password."
            exit 1
          }
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain || {
            echo "Error: Failed to set key partition list"
            exit 1
          }
          echo "Listing identities in keychain:"
          security find-identity -v -p codesigning
        env:
          P12_FILE: ${{ steps.find-files.outputs.p12_file }}

      # Step 5: Sign Shortcuts with codesign
      - name: Sign Shortcuts with codesign
        run: |
          SIGNING_IDENTITY="Developer ID Application: Lynq Inc (K5S7WU9FSX)"
          echo "Using signing identity: $SIGNING_IDENTITY"
          SHORTCUT_FILES=$(find . -type f -name "*.shortcut")
          if [ -z "$SHORTCUT_FILES" ]; then
            echo "Error: No .shortcut files found in repository"
            exit 1
          fi
          for file in $SHORTCUT_FILES; do
            echo "Signing $file..."
            codesign -f -s "$SIGNING_IDENTITY" "$file" --keychain build.keychain || {
              echo "Error: Failed to sign $file"
              exit 1
            }
            mv "$file" "${file%.shortcut}-signed.shortcut"
            echo "Signed shortcut created: ${file%.shortcut}-signed.shortcut"
            ls -lh "${file%.shortcut}-signed.shortcut"
          done

      # Step 6: Upload signed shortcuts to GitHub Releases
      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: |
            **/*-signed.shortcut
          tag_name: v${{ github.run_id }}
          name: Signed Shortcuts Release
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Roblox Luau Script Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  process-luau-script:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Install dependencies (CMake, g++, git)
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ git

      # Install Luau tools
      - name: Install Luau
        run: |
          git clone https://github.com/luau-lang/luau.git
          cd luau
          cmake -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build -j
          sudo cp build/luau /usr/local/bin/
          sudo cp build/luau-analyze /usr/local/bin/
          sudo cp build/luau-compile /usr/local/bin/

      # Install luauDec
      - name: Install luauDec
        run: |
          git clone --recursive https://github.com/xgladius/luauDec.git
          cd luauDec
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . -j
          sudo cp luauDec /usr/local/bin/

      # Validate and execute the Luau script
      - name: Run Luau Script
        run: |
          luau script.lua || { echo "Script execution failed"; exit 1; }

      # Compile Luau script to bytecode
      - name: Compile to Bytecode
        run: |
          luau-compile -O2 --binary script.lua > script.luac || { echo "Bytecode compilation failed"; exit 1; }

      # Decompile bytecode to human-readable Luau code
      - name: Decompile Bytecode
        run: |
          luauDec script.luac > script_decompiled.lua || { echo "Bytecode decompilation failed"; exit 1; }
          # Verify decompiled output exists and is non-empty
          if [ ! -s script_decompiled.lua ]; then
            echo "Decompiled file is empty or missing"
            exit 1
          fi

      # Upload the decompiled output as an artifact
      - name: Upload Decompiled Artifact
        uses: actions/upload-artifact@v4
        with:
          name: decompiled-luau-script
          path: script_decompiled.lua

      # Fallback: Disassemble bytecode if decompilation fails (optional)
      - name: Fallback Disassemble Bytecode
        if: failure()
        run: |
          echo "Falling back to disassembly due to decompilation failure"
          git clone https://github.com/xgladius/luau-diasm.git
          cd luau-diasm
          g++ -o luau-diasm main.cpp
          ./luau-diasm ../script.luac > ../script_disassembled.txt || { echo "Disassembly failed"; exit 1; }
          echo "Disassembled output generated"

      # Upload fallback disassembled output as an artifact (if applicable)
      - name: Upload Fallback Disassembled Artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: disassembled-luau-script
          path: script_disassembled.txt